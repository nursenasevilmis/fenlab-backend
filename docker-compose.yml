version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fenlab-postgres
    environment:
      POSTGRES_DB: fenlab-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fenlab-network
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: fenlab-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"  # API Port
      - "9001:9001"  # Console Port
    volumes:
      - minio_data:/data
    networks:
      - fenlab-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Spring Boot Application (İsteğe bağlı - development için)
  fenlab-docker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fenlab-docker
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fenlab-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - minio
    networks:
      - fenlab-network
    restart: unless-stopped

  # Redis (Cache için - İsteğe bağlı)
  redis:
    image: redis:7-alpine
    container_name: fenlab-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fenlab-network
    restart: unless-stopped
    command: redis-server --appendonly yes

networks:
  fenlab-network:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
  redis_data: